"""Updated_db_for_Test_logic_

Revision ID: 0cffc0b6a3ae
Revises: 2544630a174f
Create Date: 2023-05-21 12:59:56.234883

"""

# revision identifiers, used by Alembic.
revision = '0cffc0b6a3ae'
down_revision = '2544630a174f'

from alembic import op, context
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()

def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()

def schema_upgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('subtitle', sa.String(length=256), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=1024), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(length=128), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('answer_option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('result_category_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=256), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['result_category_id'], ['result_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('result_category_id', sa.Integer(), nullable=False),
    sa.Column('min', sa.Integer(), nullable=False),
    sa.Column('max', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=2048), nullable=False),
    sa.ForeignKeyConstraint(['result_category_id'], ['result_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('completed_tests', 'test_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('completed_tests', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'completed_tests', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'completed_tests', 'test', ['test_id'], ['id'])
    op.drop_column('user', 'tests')
    # ### end Alembic commands ###

def schema_downgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('tests', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'completed_tests', type_='foreignkey')
    op.drop_constraint(None, 'completed_tests', type_='foreignkey')
    op.alter_column('completed_tests', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('completed_tests', 'test_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_table('grade')
    op.drop_table('answer_option')
    op.drop_table('result_category')
    op.drop_table('question')
    op.drop_table('test')
    # ### end Alembic commands ###

def data_upgrades():
    pass

def data_downgrades():
    pass
